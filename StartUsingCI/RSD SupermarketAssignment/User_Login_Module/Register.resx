<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="err.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        f//Z
</value>
  </data>
</root>